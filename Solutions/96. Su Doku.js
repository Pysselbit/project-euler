
// Sudoku helper class.
class Sudoku {
	constructor(input) {
		this.matrix = input;
	}

	get(x, y) {
		return this.matrix[y][x];
	}

	set(x, y, n) {
		this.matrix[y][x] = n;
	}

	inRow(n, y) {
		for (var x = 0; x < 9; x++) {
			if (this.get(x, y) == n)
				return true;
		}

		return false;
	}

	inColumn(n, x) {
		for (var y = 0; y < 9; y++) {
			if (this.get(x, y) == n)
				return true;
		}

		return false;
	}

	inBox(n, x, y) {
		var lol =  n == 8 && x == 7 && y == 0;

		x = Math.floor(x / 3);
		y = Math.floor(y / 3);

		for (var dx = 0; dx < 3; dx++) {
			for (var dy = 0; dy < 3; dy++) {
				if (this.get(3 * x + dx, 3 * y + dy) == n)
					return true;
			}
		}

		return false;
	}

	nextZero() {
		for (var i = 0; i < 9 * 9; i++) {
			var x = i % 9;
			var y = (i - x) / 9;

			if (this.get(x, y) == 0)
				return i;
		}

		return -1;
	}

	print() {
		var s = "";

		for (var y = 0; y < 9; y++) {
			if (y % 3 == 0)
				s += "\n";

			for (var x = 0; x < 9; x++) {
				if (x % 3 == 0)
					s += " ";

				var n = this.get(x, y);
				s += (n == 0 ? "\x1B[31m" : "\u001b[0m") + n;
			}

			s += "\n\u001b[0m";
		}

		console.log(s);
	}
}

// Brute force solve, backtracking when a digit can't be placed.
function solve(sudoku) {
	var visited = [];

	var index = sudoku.nextZero();

	if (index < 0)
		return;

	while (index < 9 * 9) {
		var x = index % 9;
		var y = (index - x) / 9;

		// Iterate from previously tested digit (or 0 if not previously visited):
		for (var d = sudoku.get(x, y); d <= 9; d++) {
			if (sudoku.inRow(d, y) || sudoku.inColumn(d, x) || sudoku.inBox(d, x, y))
				continue;

			sudoku.set(x, y, d);
			visited.push(index);

			break;
		}

		// If an available number was found, move to next 0:
		if (visited.length > 0 && index == visited[visited.length - 1]) {
			index = sudoku.nextZero();

			if (index < 0)
				break;
		}

		// Otherwise backtrack:
		else {
			sudoku.set(x, y, 0);
			index = visited.pop();
		}
	}
}

var sum = 0;

// Solve and sum up:
for (var input of getInput()) {
	var sudoku = new Sudoku(input);

	solve(sudoku);

	sum += 100 * sudoku.get(0, 0) + 10 * sudoku.get(1, 0) + sudoku.get(2, 0);
}

console.log(sum);

function getInput() {
	return [
		[
			[0,0,3,0,2,0,6,0,0],
			[9,0,0,3,0,5,0,0,1],
			[0,0,1,8,0,6,4,0,0],
			[0,0,8,1,0,2,9,0,0],
			[7,0,0,0,0,0,0,0,8],
			[0,0,6,7,0,8,2,0,0],
			[0,0,2,6,0,9,5,0,0],
			[8,0,0,2,0,3,0,0,9],
			[0,0,5,0,1,0,3,0,0]
		], [
			[2,0,0,0,8,0,3,0,0],
			[0,6,0,0,7,0,0,8,4],
			[0,3,0,5,0,0,2,0,9],
			[0,0,0,1,0,5,4,0,8],
			[0,0,0,0,0,0,0,0,0],
			[4,0,2,7,0,6,0,0,0],
			[3,0,1,0,0,7,0,4,0],
			[7,2,0,0,4,0,0,6,0],
			[0,0,4,0,1,0,0,0,3]
		], [
			[0,0,0,0,0,0,9,0,7],
			[0,0,0,4,2,0,1,8,0],
			[0,0,0,7,0,5,0,2,6],
			[1,0,0,9,0,4,0,0,0],
			[0,5,0,0,0,0,0,4,0],
			[0,0,0,5,0,7,0,0,9],
			[9,2,0,1,0,8,0,0,0],
			[0,3,4,0,5,9,0,0,0],
			[5,0,7,0,0,0,0,0,0]
		], [
			[0,3,0,0,5,0,0,4,0],
			[0,0,8,0,1,0,5,0,0],
			[4,6,0,0,0,0,0,1,2],
			[0,7,0,5,0,2,0,8,0],
			[0,0,0,6,0,3,0,0,0],
			[0,4,0,1,0,9,0,3,0],
			[2,5,0,0,0,0,0,9,8],
			[0,0,1,0,2,0,6,0,0],
			[0,8,0,0,6,0,0,2,0]
		], [
			[0,2,0,8,1,0,7,4,0],
			[7,0,0,0,0,3,1,0,0],
			[0,9,0,0,0,2,8,0,5],
			[0,0,9,0,4,0,0,8,7],
			[4,0,0,2,0,8,0,0,3],
			[1,6,0,0,3,0,2,0,0],
			[3,0,2,7,0,0,0,6,0],
			[0,0,5,6,0,0,0,0,8],
			[0,7,6,0,5,1,0,9,0]
		], [
			[1,0,0,9,2,0,0,0,0],
			[5,2,4,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,7,0],
			[0,5,0,0,0,8,1,0,2],
			[0,0,0,0,0,0,0,0,0],
			[4,0,2,7,0,0,0,9,0],
			[0,6,0,0,0,0,0,0,0],
			[0,0,0,0,3,0,9,4,5],
			[0,0,0,0,7,1,0,0,6]
		], [
			[0,4,3,0,8,0,2,5,0],
			[6,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,9,4],
			[9,0,0,0,0,4,0,7,0],
			[0,0,0,6,0,8,0,0,0],
			[0,1,0,2,0,0,0,0,3],
			[8,2,0,5,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,5],
			[0,3,4,0,9,0,7,1,0]
		], [
			[4,8,0,0,0,6,9,0,2],
			[0,0,2,0,0,8,0,0,1],
			[9,0,0,3,7,0,0,6,0],
			[8,4,0,0,1,0,2,0,0],
			[0,0,3,7,0,4,1,0,0],
			[0,0,1,0,6,0,0,4,9],
			[0,2,0,0,8,5,0,0,7],
			[7,0,0,9,0,0,6,0,0],
			[6,0,9,2,0,0,0,1,8]
		], [
			[0,0,0,9,0,0,0,0,2],
			[0,5,0,1,2,3,4,0,0],
			[0,3,0,0,0,0,1,6,0],
			[9,0,8,0,0,0,0,0,0],
			[0,7,0,0,0,0,0,9,0],
			[0,0,0,0,0,0,2,0,5],
			[0,9,1,0,0,0,0,5,0],
			[0,0,7,4,3,9,0,2,0],
			[4,0,0,0,0,7,0,0,0]
		], [
			[0,0,1,9,0,0,0,0,3],
			[9,0,0,7,0,0,1,6,0],
			[0,3,0,0,0,5,0,0,7],
			[0,5,0,0,0,0,0,0,9],
			[0,0,4,3,0,2,6,0,0],
			[2,0,0,0,0,0,0,7,0],
			[6,0,0,1,0,0,0,3,0],
			[0,4,2,0,0,7,0,0,6],
			[5,0,0,0,0,6,8,0,0]
		], [
			[0,0,0,1,2,5,4,0,0],
			[0,0,8,4,0,0,0,0,0],
			[4,2,0,8,0,0,0,0,0],
			[0,3,0,0,0,0,0,9,5],
			[0,6,0,9,0,2,0,1,0],
			[5,1,0,0,0,0,0,6,0],
			[0,0,0,0,0,3,0,4,9],
			[0,0,0,0,0,7,2,0,0],
			[0,0,1,2,9,8,0,0,0]
		], [
			[0,6,2,3,4,0,7,5,0],
			[1,0,0,0,0,5,6,0,0],
			[5,7,0,0,0,0,0,4,0],
			[0,0,0,0,9,4,8,0,0],
			[4,0,0,0,0,0,0,0,6],
			[0,0,5,8,3,0,0,0,0],
			[0,3,0,0,0,0,0,9,1],
			[0,0,6,4,0,0,0,0,7],
			[0,5,9,0,8,3,2,6,0]
		], [
			[3,0,0,0,0,0,0,0,0],
			[0,0,5,0,0,9,0,0,0],
			[2,0,0,5,0,4,0,0,0],
			[0,2,0,0,0,0,7,0,0],
			[1,6,0,0,0,0,0,5,8],
			[7,0,4,3,1,0,6,0,0],
			[0,0,0,8,9,0,1,0,0],
			[0,0,0,0,6,7,0,8,0],
			[0,0,0,0,0,5,4,3,7]
		], [
			[6,3,0,0,0,0,0,0,0],
			[0,0,0,5,0,0,0,0,8],
			[0,0,5,6,7,4,0,0,0],
			[0,0,0,0,2,0,0,0,0],
			[0,0,3,4,0,1,0,2,0],
			[0,0,0,0,0,0,3,4,5],
			[0,0,0,0,0,7,0,0,4],
			[0,8,0,3,0,0,9,0,2],
			[9,4,7,1,0,0,0,8,0]
		], [
			[0,0,0,0,2,0,0,4,0],
			[0,0,8,0,3,5,0,0,0],
			[0,0,0,0,7,0,6,0,2],
			[0,3,1,0,4,6,9,7,0],
			[2,0,0,0,0,0,0,0,0],
			[0,0,0,5,0,1,2,0,3],
			[0,4,9,0,0,0,7,3,0],
			[0,0,0,0,0,0,0,1,0],
			[8,0,0,0,0,4,0,0,0]
		], [
			[3,6,1,0,2,5,9,0,0],
			[0,8,0,9,6,0,0,1,0],
			[4,0,0,0,0,0,0,5,7],
			[0,0,8,0,0,0,4,7,1],
			[0,0,0,6,0,3,0,0,0],
			[2,5,9,0,0,0,8,0,0],
			[7,4,0,0,0,0,0,0,5],
			[0,2,0,0,1,8,0,6,0],
			[0,0,5,4,7,0,3,2,9]
		], [
			[0,5,0,8,0,7,0,2,0],
			[6,0,0,0,1,0,0,9,0],
			[7,0,2,5,4,0,0,0,6],
			[0,7,0,0,2,0,3,0,1],
			[5,0,4,0,0,0,9,0,8],
			[1,0,3,0,8,0,0,7,0],
			[9,0,0,0,7,6,2,0,5],
			[0,6,0,0,9,0,0,0,3],
			[0,8,0,1,0,3,0,4,0]
		], [
			[0,8,0,0,0,5,0,0,0],
			[0,0,0,0,0,3,4,5,7],
			[0,0,0,0,7,0,8,0,9],
			[0,6,0,4,0,0,9,0,3],
			[0,0,7,0,1,0,5,0,0],
			[4,0,8,0,0,7,0,2,0],
			[9,0,1,0,2,0,0,0,0],
			[8,4,2,3,0,0,0,0,0],
			[0,0,0,1,0,0,0,8,0]
		], [
			[0,0,3,5,0,2,9,0,0],
			[0,0,0,0,4,0,0,0,0],
			[1,0,6,0,0,0,3,0,5],
			[9,0,0,2,5,1,0,0,8],
			[0,7,0,4,0,8,0,3,0],
			[8,0,0,7,6,3,0,0,1],
			[3,0,8,0,0,0,1,0,4],
			[0,0,0,0,2,0,0,0,0],
			[0,0,5,1,0,4,8,0,0]
		], [
			[0,0,0,0,0,0,0,0,0],
			[0,0,9,8,0,5,1,0,0],
			[0,5,1,9,0,7,4,2,0],
			[2,9,0,4,0,1,0,6,5],
			[0,0,0,0,0,0,0,0,0],
			[1,4,0,5,0,8,0,9,3],
			[0,2,6,7,0,9,5,8,0],
			[0,0,5,1,0,3,6,0,0],
			[0,0,0,0,0,0,0,0,0]
		], [
			[0,2,0,0,3,0,0,9,0],
			[0,0,0,9,0,7,0,0,0],
			[9,0,0,2,0,8,0,0,5],
			[0,0,4,8,0,6,5,0,0],
			[6,0,7,0,0,0,2,0,8],
			[0,0,3,1,0,2,9,0,0],
			[8,0,0,6,0,5,0,0,7],
			[0,0,0,3,0,9,0,0,0],
			[0,3,0,0,2,0,0,5,0]
		], [
			[0,0,5,0,0,0,0,0,6],
			[0,7,0,0,0,9,0,2,0],
			[0,0,0,5,0,0,1,0,7],
			[8,0,4,1,5,0,0,0,0],
			[0,0,0,8,0,3,0,0,0],
			[0,0,0,0,9,2,8,0,5],
			[9,0,7,0,0,6,0,0,0],
			[0,3,0,4,0,0,0,1,0],
			[2,0,0,0,0,0,6,0,0]
		], [
			[0,4,0,0,0,0,0,5,0],
			[0,0,1,9,4,3,6,0,0],
			[0,0,9,0,0,0,3,0,0],
			[6,0,0,0,5,0,0,0,2],
			[1,0,3,0,0,0,5,0,6],
			[8,0,0,0,2,0,0,0,7],
			[0,0,5,0,0,0,2,0,0],
			[0,0,2,4,3,6,7,0,0],
			[0,3,0,0,0,0,0,4,0]
		], [
			[0,0,4,0,0,0,0,0,0],
			[0,0,0,0,3,0,0,0,2],
			[3,9,0,7,0,0,0,8,0],
			[4,0,0,0,0,9,0,0,1],
			[2,0,9,8,0,1,3,0,7],
			[6,0,0,2,0,0,0,0,8],
			[0,1,0,0,0,8,0,5,3],
			[9,0,0,0,4,0,0,0,0],
			[0,0,0,0,0,0,8,0,0]
		], [
			[3,6,0,0,2,0,0,8,9],
			[0,0,0,3,6,1,0,0,0],
			[0,0,0,0,0,0,0,0,0],
			[8,0,3,0,0,0,6,0,2],
			[4,0,0,6,0,3,0,0,7],
			[6,0,7,0,0,0,1,0,8],
			[0,0,0,0,0,0,0,0,0],
			[0,0,0,4,1,8,0,0,0],
			[9,7,0,0,3,0,0,1,4]
		], [
			[5,0,0,4,0,0,0,6,0],
			[0,0,9,0,0,0,8,0,0],
			[6,4,0,0,2,0,0,0,0],
			[0,0,0,0,0,1,0,0,8],
			[2,0,8,0,0,0,5,0,1],
			[7,0,0,5,0,0,0,0,0],
			[0,0,0,0,9,0,0,8,4],
			[0,0,3,0,0,0,6,0,0],
			[0,6,0,0,0,3,0,0,2]
		], [
			[0,0,7,2,5,6,4,0,0],
			[4,0,0,0,0,0,0,0,5],
			[0,1,0,0,3,0,0,6,0],
			[0,0,0,5,0,8,0,0,0],
			[0,0,8,0,6,0,2,0,0],
			[0,0,0,1,0,7,0,0,0],
			[0,3,0,0,7,0,0,9,0],
			[2,0,0,0,0,0,0,0,4],
			[0,0,6,3,1,2,7,0,0]
		], [
			[0,0,0,0,0,0,0,0,0],
			[0,7,9,0,5,0,1,8,0],
			[8,0,0,0,0,0,0,0,7],
			[0,0,7,3,0,6,8,0,0],
			[4,5,0,7,0,8,0,9,6],
			[0,0,3,5,0,2,7,0,0],
			[7,0,0,0,0,0,0,0,5],
			[0,1,6,0,3,0,4,2,0],
			[0,0,0,0,0,0,0,0,0]
		], [
			[0,3,0,0,0,0,0,8,0],
			[0,0,9,0,0,0,5,0,0],
			[0,0,7,5,0,9,2,0,0],
			[7,0,0,1,0,5,0,0,8],
			[0,2,0,0,9,0,0,3,0],
			[9,0,0,4,0,2,0,0,1],
			[0,0,4,2,0,7,1,0,0],
			[0,0,2,0,0,0,8,0,0],
			[0,7,0,0,0,0,0,9,0]
		], [
			[2,0,0,1,7,0,6,0,3],
			[0,5,0,0,0,0,1,0,0],
			[0,0,0,0,0,6,0,7,9],
			[0,0,0,0,4,0,7,0,0],
			[0,0,0,8,0,1,0,0,0],
			[0,0,9,0,5,0,0,0,0],
			[3,1,0,4,0,0,0,0,0],
			[0,0,5,0,0,0,0,6,0],
			[9,0,6,0,3,7,0,0,2]
		], [
			[0,0,0,0,0,0,0,8,0],
			[8,0,0,7,0,1,0,4,0],
			[0,4,0,0,2,0,0,3,0],
			[3,7,4,0,0,0,9,0,0],
			[0,0,0,0,3,0,0,0,0],
			[0,0,5,0,0,0,3,2,1],
			[0,1,0,0,6,0,0,5,0],
			[0,5,0,8,0,2,0,0,6],
			[0,8,0,0,0,0,0,0,0]
		], [
			[0,0,0,0,0,0,0,8,5],
			[0,0,0,2,1,0,0,0,9],
			[9,6,0,0,8,0,1,0,0],
			[5,0,0,8,0,0,0,1,6],
			[0,0,0,0,0,0,0,0,0],
			[8,9,0,0,0,6,0,0,7],
			[0,0,9,0,7,0,0,5,2],
			[3,0,0,0,5,4,0,0,0],
			[4,8,0,0,0,0,0,0,0]
		], [
			[6,0,8,0,7,0,5,0,2],
			[0,5,0,6,0,8,0,7,0],
			[0,0,2,0,0,0,3,0,0],
			[5,0,0,0,9,0,0,0,6],
			[0,4,0,3,0,2,0,5,0],
			[8,0,0,0,5,0,0,0,3],
			[0,0,5,0,0,0,2,0,0],
			[0,1,0,7,0,4,0,9,0],
			[4,0,9,0,6,0,7,0,1]
		], [
			[0,5,0,0,1,0,0,4,0],
			[1,0,7,0,0,0,6,0,2],
			[0,0,0,9,0,5,0,0,0],
			[2,0,8,0,3,0,5,0,1],
			[0,4,0,0,7,0,0,2,0],
			[9,0,1,0,8,0,4,0,6],
			[0,0,0,4,0,1,0,0,0],
			[3,0,4,0,0,0,7,0,9],
			[0,2,0,0,6,0,0,1,0]
		], [
			[0,5,3,0,0,0,7,9,0],
			[0,0,9,7,5,3,4,0,0],
			[1,0,0,0,0,0,0,0,2],
			[0,9,0,0,8,0,0,1,0],
			[0,0,0,9,0,7,0,0,0],
			[0,8,0,0,3,0,0,7,0],
			[5,0,0,0,0,0,0,0,3],
			[0,0,7,6,4,1,2,0,0],
			[0,6,1,0,0,0,9,4,0]
		], [
			[0,0,6,0,8,0,3,0,0],
			[0,4,9,0,7,0,2,5,0],
			[0,0,0,4,0,5,0,0,0],
			[6,0,0,3,1,7,0,0,4],
			[0,0,7,0,0,0,8,0,0],
			[1,0,0,8,2,6,0,0,9],
			[0,0,0,7,0,2,0,0,0],
			[0,7,5,0,4,0,1,9,0],
			[0,0,3,0,9,0,6,0,0]
		], [
			[0,0,5,0,8,0,7,0,0],
			[7,0,0,2,0,4,0,0,5],
			[3,2,0,0,0,0,0,8,4],
			[0,6,0,1,0,5,0,4,0],
			[0,0,8,0,0,0,5,0,0],
			[0,7,0,8,0,3,0,1,0],
			[4,5,0,0,0,0,0,9,1],
			[6,0,0,5,0,8,0,0,7],
			[0,0,3,0,1,0,6,0,0]
		], [
			[0,0,0,9,0,0,8,0,0],
			[1,2,8,0,0,6,4,0,0],
			[0,7,0,8,0,0,0,6,0],
			[8,0,0,4,3,0,0,0,7],
			[5,0,0,0,0,0,0,0,9],
			[6,0,0,0,7,9,0,0,8],
			[0,9,0,0,0,4,0,1,0],
			[0,0,3,6,0,0,2,8,4],
			[0,0,1,0,0,7,0,0,0]
		], [
			[0,0,0,0,8,0,0,0,0],
			[2,7,0,0,0,0,0,5,4],
			[0,9,5,0,0,0,8,1,0],
			[0,0,9,8,0,6,4,0,0],
			[0,2,0,4,0,3,0,6,0],
			[0,0,6,9,0,5,1,0,0],
			[0,1,7,0,0,0,6,2,0],
			[4,6,0,0,0,0,0,3,8],
			[0,0,0,0,9,0,0,0,0]
		], [
			[0,0,0,6,0,2,0,0,0],
			[4,0,0,0,5,0,0,0,1],
			[0,8,5,0,1,0,6,2,0],
			[0,3,8,2,0,6,7,1,0],
			[0,0,0,0,0,0,0,0,0],
			[0,1,9,4,0,7,3,5,0],
			[0,2,6,0,4,0,5,3,0],
			[9,0,0,0,2,0,0,0,7],
			[0,0,0,8,0,9,0,0,0]
		], [
			[0,0,0,9,0,0,0,0,2],
			[0,5,0,1,2,3,4,0,0],
			[0,3,0,0,0,0,1,6,0],
			[9,0,8,0,0,0,0,0,0],
			[0,7,0,0,0,0,0,9,0],
			[0,0,0,0,0,0,2,0,5],
			[0,9,1,0,0,0,0,5,0],
			[0,0,7,4,3,9,0,2,0],
			[4,0,0,0,0,7,0,0,0]
		], [
			[3,8,0,0,0,0,0,0,0],
			[0,0,0,4,0,0,7,8,5],
			[0,0,9,0,2,0,3,0,0],
			[0,6,0,0,9,0,0,0,0],
			[8,0,0,3,0,2,0,0,9],
			[0,0,0,0,4,0,0,7,0],
			[0,0,1,0,7,0,5,0,0],
			[4,9,5,0,0,6,0,0,0],
			[0,0,0,0,0,0,0,9,2]
		], [
			[0,0,0,1,5,8,0,0,0],
			[0,0,2,0,6,0,8,0,0],
			[0,3,0,0,0,0,0,4,0],
			[0,2,7,0,3,0,5,1,0],
			[0,0,0,0,0,0,0,0,0],
			[0,4,6,0,8,0,7,9,0],
			[0,5,0,0,0,0,0,8,0],
			[0,0,4,0,7,0,1,0,0],
			[0,0,0,3,2,5,0,0,0]
		], [
			[0,1,0,5,0,0,2,0,0],
			[9,0,0,0,0,1,0,0,0],
			[0,0,2,0,0,8,0,3,0],
			[5,0,0,0,3,0,0,0,7],
			[0,0,8,0,0,0,5,0,0],
			[6,0,0,0,8,0,0,0,4],
			[0,4,0,1,0,0,7,0,0],
			[0,0,0,7,0,0,0,0,6],
			[0,0,3,0,0,4,0,5,0]
		], [
			[0,8,0,0,0,0,0,4,0],
			[0,0,0,4,6,9,0,0,0],
			[4,0,0,0,0,0,0,0,7],
			[0,0,5,9,0,4,6,0,0],
			[0,7,0,6,0,8,0,3,0],
			[0,0,8,5,0,2,1,0,0],
			[9,0,0,0,0,0,0,0,5],
			[0,0,0,7,8,1,0,0,0],
			[0,6,0,0,0,0,0,1,0]
		], [
			[9,0,4,2,0,0,0,0,7],
			[0,1,0,0,0,0,0,0,0],
			[0,0,0,7,0,6,5,0,0],
			[0,0,0,8,0,0,0,9,0],
			[0,2,0,9,0,4,0,6,0],
			[0,4,0,0,0,2,0,0,0],
			[0,0,1,6,0,7,0,0,0],
			[0,0,0,0,0,0,0,3,0],
			[3,0,0,0,0,5,7,0,2]
		], [
			[0,0,0,7,0,0,8,0,0],
			[0,0,6,0,0,0,0,3,1],
			[0,4,0,0,0,2,0,0,0],
			[0,2,4,0,7,0,0,0,0],
			[0,1,0,0,3,0,0,8,0],
			[0,0,0,0,6,0,2,9,0],
			[0,0,0,8,0,0,0,7,0],
			[8,6,0,0,0,0,5,0,0],
			[0,0,2,0,0,6,0,0,0]
		], [
			[0,0,1,0,0,7,0,9,0],
			[5,9,0,0,8,0,0,0,1],
			[0,3,0,0,0,0,0,8,0],
			[0,0,0,0,0,5,8,0,0],
			[0,5,0,0,6,0,0,2,0],
			[0,0,4,1,0,0,0,0,0],
			[0,8,0,0,0,0,0,3,0],
			[1,0,0,0,2,0,0,7,9],
			[0,2,0,7,0,0,4,0,0]
		], [
			[0,0,0,0,0,3,0,1,7],
			[0,1,5,0,0,9,0,0,8],
			[0,6,0,0,0,0,0,0,0],
			[1,0,0,0,0,7,0,0,0],
			[0,0,9,0,0,0,2,0,0],
			[0,0,0,5,0,0,0,0,4],
			[0,0,0,0,0,0,0,2,0],
			[5,0,0,6,0,0,3,4,0],
			[3,4,0,2,0,0,0,0,0]
		], [
			[3,0,0,2,0,0,0,0,0],
			[0,0,0,1,0,7,0,0,0],
			[7,0,6,0,3,0,5,0,0],
			[0,7,0,0,0,9,0,8,0],
			[9,0,0,0,2,0,0,0,4],
			[0,1,0,8,0,0,0,5,0],
			[0,0,9,0,4,0,3,0,1],
			[0,0,0,7,0,2,0,0,0],
			[0,0,0,0,0,8,0,0,6]
		]
	];
}